#pragma once

typedef enum {
  OP_CODE_ADC=0, OP_CODE_AND, OP_CODE_ASL,
  OP_CODE_BCC, OP_CODE_BCS, OP_CODE_BEQ, OP_CODE_BIT, OP_CODE_BMI, OP_CODE_BNE, OP_CODE_BPL, OP_CODE_BRA, OP_CODE_BRK, OP_CODE_BVC, OP_CODE_BVS,
  OP_CODE_CLC, OP_CODE_CLD, OP_CODE_CLI, OP_CODE_CLV, OP_CODE_CMP, OP_CODE_CPX, OP_CODE_CPY,
  OP_CODE_DEC, OP_CODE_DEX, OP_CODE_DEY,
  OP_CODE_INC, OP_CODE_INX, OP_CODE_INY,
  OP_CODE_JMP, OP_CODE_JSR,
  OP_CODE_LDA, OP_CODE_LDX, OP_CODE_LDY, OP_CODE_LSR,
  OP_CODE_NOP,
  OP_CODE_ORA,
  OP_CODE_PHA, OP_CODE_PHP, OP_CODE_PHX, OP_CODE_PHY, OP_CODE_PLA, OP_CODE_PLP, OP_CODE_PLX, OP_CODE_PLY,
  OP_CODE_ROL, OP_CODE_ROR, OP_CODE_RTI, OP_CODE_RTS,
  OP_CODE_SBC, OP_CODE_SEC, OP_CODE_SED, OP_CODE_SEI, OP_CODE_STA, OP_CODE_STP, OP_CODE_STX, OP_CODE_STY, OP_CODE_STZ,
  OP_CODE_TAX, OP_CODE_TAY, OP_CODE_TRB, OP_CODE_TSB, OP_CODE_TSX, OP_CODE_TXA, OP_CODE_TXS, OP_CODE_TYA,
  OP_CODE_WAI,
  OP_CODE_XOR,
  OP_CODE_BBR0, OP_CODE_BBR1, OP_CODE_BBR2, OP_CODE_BBR3, OP_CODE_BBR4, OP_CODE_BBR5, OP_CODE_BBR6, OP_CODE_BBR7,
  OP_CODE_BBS0, OP_CODE_BBS1, OP_CODE_BBS2, OP_CODE_BBS3, OP_CODE_BBS4, OP_CODE_BBS5, OP_CODE_BBS6, OP_CODE_BBS7,
  OP_CODE_RMB0, OP_CODE_RMB1, OP_CODE_RMB2, OP_CODE_RMB3, OP_CODE_RMB4, OP_CODE_RMB5, OP_CODE_RMB6, OP_CODE_RMB7,
  OP_CODE_SMB0, OP_CODE_SMB1, OP_CODE_SMB2, OP_CODE_SMB3, OP_CODE_SMB4, OP_CODE_SMB5, OP_CODE_SMB6, OP_CODE_SMB7,
  OP_CODE_xxx
} OpCode;

typedef enum {
  ADDRESS_MODE_ABSOLUTE = 0,
  ADDRESS_MODE_ABSOLUTE_INDEXED_INDIRECT,
  ADDRESS_MODE_ABSOLUTE_INDEXED_X,
  ADDRESS_MODE_ABSOLUTE_INDEXED_Y,
  ADDRESS_MODE_ABSOLUTE_INDRECT,
  ADDRESS_MODE_ACCUMULATOR,
  ADDRESS_MODE_IMMEDIATE,
  ADDRESS_MODE_IMPLIED,
  ADDRESS_MODE_RELATIVE,
  ADDRESS_MODE_STACK,
  ADDRESS_MODE_ZERO_PAGE,
  ADDRESS_MODE_ZERO_PAGE_INDEXED_INDIRECT,
  ADDRESS_MODE_ZERO_PAGE_INDEXED_X,
  ADDRESS_MODE_ZERO_PAGE_INDEXED_Y,
  ADDRESS_MODE_ZERO_PAGE_INDIRECT,
  ADDRESS_MODE_ZERO_PAGE_INDIRECT_INDEXED_Y,
  ADDRESS_MODE_ZERO_PAGE_RELATIVE,
  ADDRESS_MODE_xxx
} AddressMode;

typedef enum {
  VALUE_MODE_ADDRESS,
  VALUE_MODE_IMMEDIATE,
  VALUE_MODE_REGISTER,
  VALUE_MODE_IMPLIED
} ValueMode;

typedef struct {
  OpCode    op;
  ValueMode mode;
  u16 address;
  u8  value;
  u8 *reference;
} Operation;
